<?php
/**
 * CakePHP(tm) : Rapid Development Framework (https://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 * @link      https://cakephp.org CakePHP(tm) Project
 * @since     0.2.9
 * @license   https://opensource.org/licenses/mit-license.php MIT License
 */
namespace App\Controller;

use Cake\Controller\Component\AuthComponent;
use Cake\Controller\Controller;
use Cake\Event\Event;
use Composer\Cache;

/**
 * Application Controller
 *
 * Add your application-wide methods in the class below, your controllers
 * will inherit them.
 *
 * @property AppController $this
 *
 * @link https://book.cakephp.org/3.0/en/controllers.html#the-app-controller
 */
class AppController extends Controller
{

    /**
     * @throws \Exception
     */
    public function initialize()
    {
        parent::initialize();

        \Cake\Cache\Cache::disable();

        \Cake\I18n\FrozenTime::setDefaultLocale('fr-Fr');
        \Cake\I18n\FrozenTime::setToStringFormat('dd/mm/YYYY H:m:ss');
        \Cake\I18n\FrozenTime::setJsonEncodeFormat('dd/mm/YYYY H:m:ss');

        $this->loadComponent('RequestHandler');
        $this->loadComponent('Flash');

        $this->loadComponent('Auth', [
            'authenticate' => [
                'Form' => [
                    'fields' => [
                        'username' => 'email',
                        'password' => 'password'
                    ]
                ],
                'all' => ['userModel' => 'Users'],
            ],
            'loginAction' => [
                'controller' => 'Users',
                'action' => 'login'
            ],
            // Si pas autorisé, on renvoit sur la page précédente
            'unauthorizedRedirect' => $this->referer()
        ]);

        // Nom du controller var_dump($this->getName());
    }

    public function isAuthorized($user)
    {
        parent::isAuthorized($user); // TODO: Change the autogenerated stub

        if($this->request->getParam('controller') == "Gamme") {
            if($this->request->getParam('action') == 'index') {
                return false;
            }
        }

        return true;
    }

    protected function renderToJson(string $json)
    {
        return $this->response
            ->withStatus(200)
            ->withType('application/json')
            ->withStringBody($json);
    }

    public function beforeFilter(Event $event)
    {
        $this->getEventManager()->off($this->Csrf);
        return parent::beforeFilter($event); // TODO: Change the autogenerated stub
    }
}
